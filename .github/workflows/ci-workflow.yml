name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    name: Run Unit Tests
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: |
          cd backend/testproject
          dotnet restore

      - name: Run Unit Tests with Coverage
        run: |
          cd backend/testproject
          dotnet test TestProject.csproj --logger:trx --results-directory:./test-results /p:CollectCoverage=true /p:CoverletOutput=./test-results/coverage.opencover.xml /p:CoverletOutputFormat=opencover

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: backend/testproject/test-results

  sonarqube:
    name: SonarQube Analysis
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Install Tools
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage

    - name: Run Build and Tests with Coverage
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd backend
        dotnet sonarscanner begin /k:"Stefhoek123_Individueel-project" \
        /o:"stefhoek123" \
        /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
        /d:sonar.host.url="https://sonarcloud.io" \
        /d:sonar.cs.opencover.reportsPaths=backend/testproject/test-results/coverage.opencover.xml
        dotnet build Backend.sln
        dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

